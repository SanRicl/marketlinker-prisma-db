
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.20.0
 * Query Engine version: 06fc58a368dc7be9fbbbe894adf8d445d208c284
 */
Prisma.prismaVersion = {
  client: "5.20.0",
  engine: "06fc58a368dc7be9fbbbe894adf8d445d208c284"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  first_name: 'first_name',
  last_name: 'last_name',
  gender: 'gender',
  phone: 'phone',
  active: 'active',
  visitor: 'visitor',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.OrganizationScalarFieldEnum = {
  id: 'id',
  zip_code: 'zip_code',
  active: 'active',
  business_name: 'business_name',
  address_one: 'address_one',
  address_two: 'address_two',
  fantasy_name: 'fantasy_name',
  email: 'email',
  phone_number: 'phone_number',
  website: 'website',
  registration_number: 'registration_number',
  slug: 'slug',
  owner_id: 'owner_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProfileScalarFieldEnum = {
  id: 'id',
  profile_avatar: 'profile_avatar',
  profile_cover: 'profile_cover',
  user_id: 'user_id',
  organization_id: 'organization_id',
  username: 'username',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.MemberScalarFieldEnum = {
  user_id: 'user_id',
  role: 'role',
  organization_id: 'organization_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  name: 'name',
  second_name: 'second_name',
  whatsapp: 'whatsapp',
  shop_name: 'shop_name',
  address_line_one: 'address_line_one',
  address_line_two: 'address_line_two',
  email: 'email',
  second_phone: 'second_phone',
  vat_rate_id: 'vat_rate_id',
  currency_id: 'currency_id',
  agent_id: 'agent_id',
  active: 'active',
  organization_id: 'organization_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.OperationMessageScalarFieldEnum = {
  message: 'message',
  type: 'type',
  active: 'active',
  created_at: 'created_at',
  updated_at: 'updated_at',
  id: 'id'
};

exports.Prisma.OperationMessageTranslationScalarFieldEnum = {
  language_code: 'language_code',
  message: 'message',
  created_at: 'created_at',
  updated_at: 'updated_at',
  operation_message_id: 'operation_message_id'
};

exports.Prisma.InviteCodeScalarFieldEnum = {
  id: 'id',
  code: 'code',
  expires_at: 'expires_at',
  created_at: 'created_at',
  updated_at: 'updated_at',
  used: 'used',
  organization_id: 'organization_id'
};

exports.Prisma.ProductCategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  full_name: 'full_name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProductColorScalarFieldEnum = {
  id: 'id',
  attribute_name: 'attribute_name',
  attribute_type: 'attribute_type',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProductSizeScalarFieldEnum = {
  id: 'id',
  attribute_name: 'attribute_name',
  attribute_type: 'attribute_type',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProductVoltageScalarFieldEnum = {
  id: 'id',
  attribute_name: 'attribute_name',
  attribute_type: 'attribute_type',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProductFlavorScalarFieldEnum = {
  id: 'id',
  attribute_name: 'attribute_name',
  attribute_type: 'attribute_type',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProductPowerScalarFieldEnum = {
  id: 'id',
  attribute_name: 'attribute_name',
  attribute_type: 'attribute_type',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SaleChannelScalarFieldEnum = {
  id: 'id',
  sale_channel: 'sale_channel',
  code: 'code',
  channel_type: 'channel_type',
  product_id: 'product_id',
  sale_price: 'sale_price',
  sale_date_start: 'sale_date_start',
  sale_date_end: 'sale_date_end',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProductCustomCategoryScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  sku: 'sku',
  active: 'active',
  brand: 'brand',
  category_id: 'category_id',
  color_id: 'color_id',
  cross_docking_days: 'cross_docking_days',
  description: 'description',
  gender: 'gender',
  height: 'height',
  length: 'length',
  images: 'images',
  ean: 'ean',
  cost_price: 'cost_price',
  manufacturer_part_number: 'manufacturer_part_number',
  model: 'model',
  name: 'name',
  origin: 'origin',
  ncm: 'ncm',
  price: 'price',
  product_name: 'product_name',
  size_id: 'size_id',
  stock: 'stock',
  warranty: 'warranty',
  weight: 'weight',
  width: 'width',
  custom_category_id: 'custom_category_id',
  flavor_id: 'flavor_id',
  measurement_unit: 'measurement_unit',
  unit_multiplier: 'unit_multiplier',
  meta_fields: 'meta_fields',
  power_id: 'power_id',
  sale_price: 'sale_price',
  sale_date_start: 'sale_date_start',
  sale_date_end: 'sale_date_end',
  voltage_id: 'voltage_id',
  videos: 'videos',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  OWNER: 'OWNER',
  ADMIN: 'ADMIN',
  BILLING: 'BILLING',
  BASIC: 'BASIC'
};

exports.Prisma.ModelName = {
  User: 'User',
  Organization: 'Organization',
  Profile: 'Profile',
  Member: 'Member',
  Customer: 'Customer',
  OperationMessage: 'OperationMessage',
  OperationMessageTranslation: 'OperationMessageTranslation',
  InviteCode: 'InviteCode',
  ProductCategory: 'ProductCategory',
  ProductColor: 'ProductColor',
  ProductSize: 'ProductSize',
  ProductVoltage: 'ProductVoltage',
  ProductFlavor: 'ProductFlavor',
  ProductPower: 'ProductPower',
  SaleChannel: 'SaleChannel',
  ProductCustomCategory: 'ProductCustomCategory',
  Product: 'Product'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
