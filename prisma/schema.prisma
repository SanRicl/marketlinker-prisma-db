model User {
  id                 String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email              String         @unique @db.VarChar(250)
  password           String         @db.VarChar(250)
  first_name         String        @unique @db.VarChar(250)
  last_name          String        @unique @db.VarChar(250)
  gender             String?        @unique @db.VarChar(1)
  phone              String?        @unique @db.VarChar(250)
  active             Boolean        @default(true)
  visitor            Boolean?       @default(true)
  user_organizations Organization[]
  teams            Member[]

  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamptz(6)
  profile    Profile?

  @@map("users")
  @@schema("main_service")
}

model Organization {
  id                  String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  zip_code            String?  @db.VarChar(15)
  active              Boolean  @default(true)
  business_name       String   @db.VarChar(120)
  address_one         String?  @db.VarChar(120)
  address_two         String?  @db.VarChar(120)
  fantasy_name        String   @db.VarChar(120)
  email               String   @db.VarChar(50)
  phone_number        String   @db.VarChar(30)
  website             String?  @db.VarChar(100)
  registration_number String   @unique @db.VarChar(50)
  slug                String   @unique @db.VarChar(120)
  owner_id            String   @db.Uuid
  owner               User     @relation(fields: [owner_id], references: [id])
  members           Member[]

  created_at DateTime     @default(now()) @db.Timestamptz(6)
  updated_at DateTime     @default(now()) @db.Timestamptz(6)
  customer   Customer[]
  invite_code InviteCode[]
  profile    Profile?

  @@map("organizations")
  @@schema("main_service")
}

model Profile {
  id              String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  profile_avatar  String? @db.VarChar(500)
  profile_cover   String? @db.VarChar(500)
  user_id         String? @db.Uuid @unique
  organization_id String? @db.Uuid @unique
  username        String  @db.VarChar(250)
  description     String? @db.VarChar(500)

  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)

  user         User?         @relation(fields: [user_id], references: [id])
  organization Organization? @relation(fields: [organization_id], references: [id])

  @@map("profiles")
  @@schema("main_service")
}

model Member {
  user_id         String @db.Uuid
  role            Role
  organization_id String @db.Uuid

  user         User         @relation(fields: [user_id], references: [id])
  organization Organization @relation(fields: [organization_id], references: [id])

  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)

  @@id([organization_id, user_id])
  @@map("members")
  @@schema("main_service")
}

model Customer {
  id               String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String? @db.VarChar(250)
  second_name      String? @db.VarChar(250)
  whatsapp         String? @db.VarChar(50)
  shop_name        String  @db.VarChar(250)
  address_line_one String? @db.VarChar(250)
  address_line_two String? @db.VarChar(250)
  email            String  @unique @db.VarChar(100)
  second_phone     String? @db.VarChar(50)
  vat_rate_id      String  @db.Uuid
  currency_id      String  @db.Uuid
  agent_id         String  @db.Uuid

  active          Boolean @default(true)
  organization_id String  @db.Uuid

  organization Organization @relation(fields: [organization_id], references: [id])

  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)

  @@map("customers")
  @@schema("main_service")
}

model OperationMessage {
  message    String   @db.VarChar(250)
  type       String   @db.VarChar(50)
  active     Boolean  @default(true)
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  id         String   @id @db.VarChar(50)

  operation_message_translations OperationMessageTranslation[]

  @@map("operation_messages")
  @@schema("main_service")
}

model OperationMessageTranslation {
  language_code        String           @db.VarChar(50)
  message              String           @db.VarChar(250)
  created_at           DateTime         @default(now()) @db.Timestamptz(6)
  updated_at           DateTime         @default(now()) @db.Timestamptz(6)
  operation_message_id String           @db.VarChar(50)
  operation_message    OperationMessage @relation(fields: [operation_message_id], references: [id])

  @@id([language_code, operation_message_id])
  @@map("operation_message_translations")
  @@schema("main_service")
}

model InviteCode {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  code            String    @db.VarChar(8)
  expires_at      DateTime? @db.Timestamptz()
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  updated_at      DateTime  @default(now()) @db.Timestamptz(6)
  used            Boolean   @default(false)
  organization_id String    @db.Uuid

  organization Organization @relation(fields: [organization_id], references: [id])

  @@map("invite_codes")
  @@schema("main_service")
}

enum Role {
  OWNER
  ADMIN
  BILLING
  BASIC
  
  @@schema("main_service")
}

model ProductCategory {
  id                 String         @id       @db.VarChar(25)
  name               String         @db.VarChar(100)
  full_name          String         @db.VarChar(255)
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamptz(6)

  product Product[]

  @@map("product_categories")
  @@schema("erp_service")
}
 

model ProductColor {
  id                 String         @id       @db.VarChar(25)
  attribute_name               String         @db.VarChar(100)
  attribute_type          String         @db.VarChar(3)

  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamptz(6)
  
  product Product[]
  @@map("product_colors")
  @@schema("erp_service")
}

model ProductSize {
  id                 String         @id       @db.VarChar(25)
  attribute_name               String         @db.VarChar(100)
  attribute_type          String         @db.VarChar(7)

  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamptz(6)

  @@map("product_sizes")
  @@schema("erp_service")

  product Product[]
}

model ProductVoltage {
  id                 String         @id       @db.VarChar(25)
  attribute_name               String         @db.VarChar(100)
  attribute_type          String         @db.VarChar(8)
  
  product Product[]

  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamptz(6)

  @@map("product_voltages")
  @@schema("erp_service")

}

model ProductFlavor {
  id                 String         @id       @db.VarChar(25)
  attribute_name               String         @db.VarChar(100)
  attribute_type          String         @db.VarChar(5)

  product Product[]
  
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamptz(6)

  @@map("product_flavors")
  @@schema("erp_service")
}

model ProductPower {
  id                 String         @id       @db.VarChar(25)
  attribute_name               String         @db.VarChar(100)
  attribute_type          String         @db.VarChar(8)
 
  product Product[]
  
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamptz(6)

  @@map("product_powers")
  @@schema("erp_service")
}


model SaleChannel {
  id              String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  sale_channel    String @db.VarChar(100)
  code            Int            @db.Integer
  channel_type    String   @db.VarChar(20)
  product_id      String? @db.Uuid
  sale_price Float?
  sale_date_start DateTime?
  sale_date_end DateTime?


  product Product? @relation(fields: [product_id], references: [id])

  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamptz(6)
  
  @@map("sales_channel")
  @@schema("erp_service")
}

model ProductCustomCategory {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product Product[]
  
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamptz(6)
  
  @@map("product_custom_categories")
  @@schema("erp_service")
}
model Product {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  sku String @db.VarChar(250)
  active Boolean?  @default(true)
  brand String? @db.VarChar(250)
  category_id  String  @db.VarChar(25)
  color_id String? @db.VarChar(25)
  cross_docking_days Int? 
  description String
  gender String? @db.VarChar(100)
  height Int 
  length Int
  images String[]
  ean String? @db.VarChar(250)
  cost_price Int? 
  sales_channels SaleChannel[]
  manufacturer_part_number Int?
  model String? @db.VarChar(250)
  name String @db.VarChar(250)
  origin String? @db.VarChar(100)
  ncm String? @db.VarChar(250)
  price Float
  product_name String? @db.VarChar(250)
  size_id String? @db.VarChar(25)
  stock Int
  warranty Int?
  weight Int
  width Int
  custom_category_id String? @db.Uuid
  flavor_id String? @db.VarChar(25)
  measurement_unit String? @db.VarChar(5)
  unit_multiplier Int?
  meta_fields Json[]
  power_id String? @db.VarChar(25)
  sale_price Float?
  sale_date_start DateTime?
  sale_date_end DateTime?
  voltage_id String? @db.VarChar(25)
  videos String[]


  product_color ProductColor? @relation(fields: [color_id], references: [id])
  product_category ProductCategory @relation(fields: [category_id], references: [id])
  product_size ProductSize? @relation(fields: [size_id], references: [id])
  product_custom_category ProductCustomCategory? @relation(fields: [custom_category_id], references: [id])
  product_flavor ProductFlavor? @relation(fields: [flavor_id], references: [id])
  product_power ProductPower? @relation(fields: [power_id], references: [id])
  produt_voltage ProductVoltage? @relation(fields: [voltage_id], references: [id])


  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamptz(6)

  @@map("products")
  @@schema("erp_service")
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas = ["main_service", "erp_service"]
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
  binaryTargets   = ["native", "linux-musl"]
}
